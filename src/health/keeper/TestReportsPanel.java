package health.keeper;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;



public class TestReportsPanel extends javax.swing.JPanel {

    
    //tests
    List<TestReport> todos;
    List<TestReport> dones;
    String[] namesOfTODOs;
    String[] namesOfDones;
    User user;
    TestReport focusedTestReport;

    public TestReportsPanel(User user) {

        initComponents();
        HealthKeeper.centreWindow(this.DialogTestReport);
        this.user=user;
        start();
    }

    
    public void start() {
        
        
        todos = new ArrayList<TestReport>();
        dones = new ArrayList<TestReport>();
        
        for (int i = 0; i < this.user.tests.size(); i++) {
            TestReport temp = user.tests.get(i);
            if (temp.isdue) {
                todos.add(temp);
            } else {
                dones.add(temp);
            }
        }

        
        
        namesOfTODOs = new String[todos.size()];
        namesOfDones = new String[dones.size()];

        //extract names
        for (int i = 0; i < todos.size(); i++) {
            namesOfTODOs[i] = todos.get(i).nameoftest;

        }
        for (int i = 0; i < dones.size(); i++) {
            namesOfDones[i] = dones.get(i).nameoftest;
        }

        //we need strings to setListData
        if (namesOfTODOs.length > 0) {
            listTODOs.setListData(namesOfTODOs);
        } else {
            listTODOs.setListData(new String[]{"empty here"});
        }
        if (namesOfDones.length > 0) {
            listDones.setListData(namesOfDones);
        } else {
            listDones.setListData(new String[]{"empty here"});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogTestReport = new javax.swing.JDialog();
        jLabelName = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelResult = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPaneResult = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDones = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listTODOs = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        suggestButton = new javax.swing.JButton();

        DialogTestReport.setAlwaysOnTop(true);
        DialogTestReport.setLocationByPlatform(true);
        DialogTestReport.setMinimumSize(new java.awt.Dimension(500, 400));
        DialogTestReport.setType(java.awt.Window.Type.POPUP);

        jLabelName.setText("TEST NAME:");

        jLabelDate.setText("Date: ");

        jLabelResult.setText("Result:");

        jButtonSave.setText("Save Changes");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Close");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextPaneResult.setColumns(20);
        jTextPaneResult.setRows(5);
        jScrollPane3.setViewportView(jTextPaneResult);

        javax.swing.GroupLayout DialogTestReportLayout = new javax.swing.GroupLayout(DialogTestReport.getContentPane());
        DialogTestReport.getContentPane().setLayout(DialogTestReportLayout);
        DialogTestReportLayout.setHorizontalGroup(
            DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogTestReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DialogTestReportLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSave))
                    .addGroup(DialogTestReportLayout.createSequentialGroup()
                        .addGroup(DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDate)
                            .addComponent(jLabelResult))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate))
                    .addGroup(DialogTestReportLayout.createSequentialGroup()
                        .addComponent(jLabelName)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DialogTestReportLayout.setVerticalGroup(
            DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogTestReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DialogTestReportLayout.createSequentialGroup()
                        .addComponent(jLabelDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelResult))
                    .addGroup(DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonUpdate)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DialogTestReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        setBackground(new java.awt.Color(255, 255, 255));

        listDones.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        listDones.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDonesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listDones);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("PREVIOUS TESTS' REPORTS:");

        listTODOs.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        listTODOs.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listTODOs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTODOsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listTODOsMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(listTODOs);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("TODOs:");

        suggestButton.setBackground(new java.awt.Color(153, 204, 255));
        suggestButton.setText("Suggest new test");
        suggestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(suggestButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suggestButton)
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void suggestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestButtonActionPerformed
        String name = JOptionPane.showInputDialog(this, "Enter the name of test");
        if(name!=null){
            user.tests.add(new TestReport(name));
        }
        start();
        
    }//GEN-LAST:event_suggestButtonActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.DialogTestReport.setVisible(false);
        start();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void listTODOsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTODOsMouseClicked
        if(namesOfTODOs.length==0){
            return;
        }
        if (evt.getClickCount() == 2) {
            int focusedIndex = listTODOs.locationToIndex(evt.getPoint());
            focusedTestReport=todos.get(focusedIndex);
            resetDialogBoxFor(focusedTestReport);
            this.DialogTestReport.setVisible(true);
            
        }
    }//GEN-LAST:event_listTODOsMouseClicked

    public void combineTestReports(){
        user.tests=null;
        for(int i=0;i<todos.size();i++){
            user.tests.add(todos.get(i));
        }
        for(int i=0; i<dones.size();i++){
            user.tests.add(dones.get(i));
        }
    }
    
    
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        if(this.jTextPaneResult.getText().length()==0) {
            JOptionPane.showMessageDialog(this,
                    "Enter the result.",
                    "Na Na",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            TestReport temp=focusedTestReport;
            temp.isdue=false;
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            temp.date=dateFormat.format(new Date());
            temp.result=this.jTextPaneResult.getText();
            this.DialogTestReport.setVisible(false);
        }
        start();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void listDonesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDonesMouseClicked
        if(namesOfDones.length==0){
            return;
        }
        if (evt.getClickCount() == 2) {
            int focusedIndex = listDones.locationToIndex(evt.getPoint());
            this.focusedTestReport =dones.get(focusedIndex);
            resetDialogBoxFor(focusedTestReport);
            this.DialogTestReport.setVisible(true);
            
        }
    }//GEN-LAST:event_listDonesMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        this.jTextPaneResult.setEnabled(true);
        this.jButtonSave.setEnabled(true);
        this.jButtonCancel.setText("Cancel");
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void listTODOsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTODOsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_listTODOsMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        user.tests.remove(focusedTestReport);
        this.DialogTestReport.setVisible(false);
        start();
//        for(int i=0; i<user.tests.size();i++){
//            if(user.tests.get(i)==this.focusedTestReport){
//                user.tests.remove(i);
//            }
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Update the jLanels and stuff to show the information of the testreport
    public void resetDialogBoxFor(TestReport report){
        
        jLabelName.setText("TEST NAME: "+report.nameoftest);
        
        if(report.isdue){
            jLabelDate.setText("Date: -_-");
            jButtonUpdate.setEnabled(false);
            jButtonCancel.setText("Close");
            this.jTextPaneResult.setText("");
            this.jTextPaneResult.setEnabled(true);
            this.jButtonSave.setEnabled(true);
        }
        else{
            
            jLabelDate.setText("Date: "+ report.date);
            jTextPaneResult.setText(report.result);
            jTextPaneResult.setEnabled(false);
            jButtonSave.setEnabled(false);
            jButtonUpdate.setEnabled(true);
            jButtonCancel.setText("Cancel");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogTestReport;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelResult;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextPaneResult;
    private javax.swing.JList<String> listDones;
    private javax.swing.JList<String> listTODOs;
    private javax.swing.JButton suggestButton;
    // End of variables declaration//GEN-END:variables
}
